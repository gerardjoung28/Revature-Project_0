[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 11.0.6)
[debug] Load.defaultLoad until apply took 1181.063ms
[debug]                 Load.loadUnit: plugins took 183.566ms
[debug]                 Load.loadUnit: defsScala took 0.4777ms
[debug] [Loading] Scanning directory C:\Users\Gerard\scala projects\Project1\project\project
[debug]                   Load.loadUnit: mkEval took 16.203ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Gerard\scala projects\Project1\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 29.3825 ms
[info] loading settings for project project1-build-build from metals.sbt ...
[debug]                     Load.resolveProject(project1-build-build) took 80.6262ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id project1-build-build, base: C:\Users\Gerard\scala projects\Project1\project\project, plugins: List(<none>))) took 155.6559ms
[debug] [Loading] Done in C:\Users\Gerard\scala projects\Project1\project\project, returning: (project1-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 624.0168ms
[debug]                 Load.loadUnit: cleanEvalClasses took 11.6818ms
[debug]               Load.loadUnit(file:/C:/Users/Gerard/scala%20projects/Project1/project/project/, ...) took 829.4411ms
[debug]             Load.apply: load took 1131.077ms
[debug]             Load.apply: resolveProjects took 11.4159ms
[debug]             Load.apply: finalTransforms took 103.9585ms
[debug]             Load.apply: config.delegates took 18.2002ms
[debug]             Load.apply: Def.make(settings)... took 1469.2266ms
[debug]             Load.apply: structureIndex took 461.3908ms
[debug]             Load.apply: mkStreams took 5.2767ms
[info] loading project definition from C:\Users\Gerard\scala projects\Project1\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 6994.3377ms
[debug]           Load.loadUnit: defsScala took 0.0161ms
[debug] [Loading] Scanning directory C:\Users\Gerard\scala projects\Project1\project
[debug]             Load.loadUnit: mkEval took 0.5091ms
